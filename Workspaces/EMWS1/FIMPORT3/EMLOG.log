*------------------------------------------------------------*
User:                Forge 15 i7
Date:                December 19, 2019
Time:                13:32:19
Site:                12600285
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                December 19, 2019
Time:                13:32:17
*------------------------------------------------------------*
14714  proc freq data=EMWS1.FIMPORT3_VariableSet noprint;
14715  table ROLE*LEVEL/out=WORK.FIMPORT3META;
14716  run;
 
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_VARIABLESET.
NOTE: The data set WORK.FIMPORT3META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
14717  proc print data=WORK.FIMPORT3META label noobs;
14718  var ROLE LEVEL COUNT;
14719  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14720  title9 ' ';
14721  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14722  run;
 
NOTE: There were 3 observations read from the data set WORK.FIMPORT3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
14723  title10;
 
14724  %let EMEXCEPTIONSTRING=;
15060  *------------------------------------------------------------*;
15061  * FIMPORT3: Generation of macros and macro variables;
15062  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15063  *------------------------------------------------------------*;
 
15064  %let EMEXCEPTIONSTRING=;
15065  *------------------------------------------------------------*;
15066  * TRAIN: FIMPORT3;
15067  *------------------------------------------------------------*;
15068  %let EM_ACTION = TRAIN;
15069  %let syscc = 0;
15070  /* Fimport.source */
15071  %macro main;
15072        %if %upcase(&EM_ACTION) = CREATE %then %do;
15073           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15074           %include temp;
15075           filename temp;
15076           %create;
15077        %end;
15078        %else
15079        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15080           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15081           %include temp;
15082           filename temp;
15083           %train;
15084        %end;
15085        %else
15086        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15087           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15088           %include temp;
15089           filename temp;
15090           %update;
15091        %end;
15092        %else
15093        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15094           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15095           %include temp;
15096           filename temp;
15097           %property;
15098        %end;
15099         %else
15100        %if %upcase(&EM_ACTION) = SCORE %then %do;
15101           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15102           %include temp;
15103           filename temp;
15104           %score;
15105        %end;
15106        %else
15107        %if %upcase(&EM_ACTION) = REPORT %then %do;
15108           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15109           %include temp;
15110           filename temp;
15111           %report;
15112        %end;
15113        %else
15114        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15115           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15116           %include temp;
15117           filename temp;
15118           %openvariableset;
15119        %end;
15120        %else
15121        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15122           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15123           %include temp;
15124           filename temp;
15125           %closevariableset;
15126        %end;
15127  %mend main;
15128  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15129 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15130 +%macro appendExt;
15131 +   data _null_;
15132 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15133 +      rfile = reverse(tempuif);
15134 +      period = indexc(rfile,".");
15135 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15136 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15137 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15138 +   run;
15139 +%mend appendExt;
15141 +%macro getNobs(ds);
15142 + %global dset nobs;
15143 + %let dset=&ds;
15144 + %let dsid = %sysfunc(open(&dset));
15145 + %if &dsid %then %do;
15146 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15147 +      %let rc = %sysfunc(close(&dsid));
15148 +   %end;
15149 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15150 +%mend getNobs;
15151 +%macro keepordrop;
15152 +  proc contents data=work.importfile noprint
15153 +  out=work.importattrs;
15154 +  run;
15155 +  %getNobs(work.importattrs);
15156 +  data _null_;
15157 +    set  work.importattrs;
15158 +    call symput("varname"||left(_n_),name);
15159 +  run;
15161 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15162 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15163 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15164 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15165 +     %put diff=&diff;
15166 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15167 +         %let kORd = keep;
15168 +             %let start=1;
15169 +             %let end = &EM_PROPERTY_MAXCOLS;
15170 +       %end;
15171 +     %else %do;
15172 +         %let kORd = drop;
15173 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15174 +             %let end = &nobs;
15175 +       %end;
15176 +     data &em_user_data;
15177 +        set &em_user_data;
15178 +        &kORd
15179 +        %do i = &start %to &end;
15180 +            &&varname&i
15181 +         %end;
15182 +        ;
15183 +     run;
15184 +%end;
15185 +%mend keepordrop;
15186 +%macro dropformatvars;
15187 +   %put fmtcnt=&fmtcnt;
15188 +   data new;
15189 +     set work.importfile;
15190 +     %do i = 1 %to &fmtcnt;
15191 +       x1zy&i =put(&&varname&i,&&fmt&i);
15192 +     %end;
15193 +   run;
15194 +   data new;
15195 +     set new;
15196 +     drop
15197 +     %do i = 1 %to &fmtcnt;
15198 +     &&varname&i
15199 +     %end;
15200 +     ;
15201 +   run;
15202 +   proc datasets library=work nolist;
15203 +     modify new;
15204 +     %do i = 1 %to &fmtcnt;
15205 +     rename x1zy&i=&&varname&i;
15206 +     %end;
15207 +   run; quit;
15208 +   data work.importfile;
15209 +     set new;
15210 +   run;
15211 +%mend;
15213 +%macro procimport(out=);
15214 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15215 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15216 +         out=&out
15217 +         dbms = ACCESS
15218 +         replace;
15219 +         database="%trim(&_IFILENAME)"
15220 +   %end;
15221 +   %else %do;
15222 +       proc import datafile="%trim(&_IFILENAME)"
15223 +          out=&out
15225 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15226 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15227 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15228 +         dbms=&EM_PROPERTY_FILETYPE
15229 +      %end;
15230 +      %else %do;
15231 +         dbms=TAB
15232 +      %end;
15233 +      /* Work around for the following defects:S0560899 and S0560009.   */
15234 +      %let sasEnv=%sysfunc(getlocenv());
15235 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15236 +         dbms=EXCEL
15237 +      %end;
15239 +      replace;
15240 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15241 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15242 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15243 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15244 +            getnames=&EM_PROPERTY_NAMEROW;
15245 +        %end;
15246 +      %end;
15247 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15248 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15249 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15250 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15251 +               delimiter=" ";
15252 +            %end;
15253 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15254 +               /* Do not specifiy a delimiter */
15255 +            %end;
15256 +            %else %do;
15257 +               delimiter="&EM_PROPERTY_DELIMITER";
15258 +            %end;
15259 +         %end;
15260 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15261 +            datarow=&EM_PROPERTY_SKIPROWS;
15262 +            /* Guessingrows must be >= skiprows */
15263 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15264 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15265 +            %end;
15266 +         %end;
15267 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15268 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15269 +         %end;
15270 +       %end;
15271 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15272 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15273 +            FMTLIB = work.formats;
15274 +      %end;
15275 +   %end;
15276 +   run;
15277 +%mend procimport;
15279 +%macro train;
15281 +   %let vvnString = %sysfunc(getoption(validvarname));
15283 +   %em_getname(key=DATA,           type=DATA);
15284 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15285 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15286 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15288 +   %appendExt;
15290 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15291 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15292 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15293 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15294 +   %end;
15296 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15297 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15298 +       %goto endtrain;
15299 +   %end;
15301 +   options validvarname=ANY;
15302 +   %procimport(out=work.importfile);
15304 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15305 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15306 +      %global fmtcnt;
15307 +      %let fmtcnt=0;
15308 +      proc contents data=work.importfile out=work.impattrs noprint;
15309 +      run;
15310 +      data _null_;
15311 +        set work.impattrs;
15312 +        if _n_=1 then i=0;
15313 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15314 +           i = i+1;
15315 +           varname = substr(name, 1, length(name));
15316 +           call symput("fmt"||left(i), trim(format)||".");
15317 +           call symput("varname"||left(i), varname);
15318 +           call symput("fmtcnt",left(i));
15319 +      end;
15320 +      retain i;
15321 +     run;
15322 +    %if &fmtcnt > 0 %then %do;
15323 +       %dropformatvars;
15324 +    %end;
15325 +    proc datasets lib=work memtype=data nolist;
15326 +        modify importfile;
15327 +        attrib _all_ format=;
15328 +    run;
15329 +    quit;
15330 +   %end;
15332 +   %let _fimportObs  = 0;
15333 +   %let _fimportVars = 0;
15334 +   %if %sysfunc(exist(work.importFile)) %then %do;
15335 +       %let dsid = %sysfunc(open(work.importFile));
15336 +       %if &dsid %then %do;
15337 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15338 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15339 +       %let dsid = %sysfunc(close(&dsid));
15340 +       %end;
15341 +   %end;
15343 +   %if ^&_fimportObs %then %do;
15344 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15345 +       %goto endtrain;
15346 +   %end;
15347 +   %if ^&_fimportVars %then %do;
15348 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15349 +       %goto endtrain;
15350 +   %end;
15352 +   data &em_user_data;
15353 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15354 +   run;
15355 +   %keepordrop;
15357 +   %em_getname(key=EMSTAT,     type=DATA);
15359 +   proc datasets lib=&em_lib nolist;
15360 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15361 +   run;
15363 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15364 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15365 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15366 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15367 +            maxClassLevels=20, identifyEmptyColumns=Y,
15368 +            outdata=&em_user_EMCMETADEFAULT,
15369 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15371 +        data &em_user_emcmetadefault;
15372 +           set &em_user_emcmetadefault;
15373 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15374 +        run;
15376 +        data &em_data_eminfo;
15377 +           length TARGET KEY $32  DATA $43;
15378 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15379 +        run;
15381 +        %let EM_META_ADVISOR=ADVANCED;
15383 +   %end;
15384 +   %else %do;
15385 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15386 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15387 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15388 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15390 +            %if "&em_property_summarize" eq "Y" %then %do;
15391 +                %em_getname(key=EMSTAT,  type=DATA);
15392 +                data &em_data_eminfo;
15393 +                   length TARGET KEY $32  DATA $43;
15394 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15395 +                run;
15396 +            %end;
15398 +        %let EM_META_ADVISOR=BASIC;
15400 +   %end;
15402 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15403 +   data _null_;
15404 +      fname = '_text';
15405 +      rc=filename(fname, "&em_user_vvnlabel");
15406 +      if ^rc and fexist(fname) then
15407 +         rc=fdelete(fname);
15408 +     rc=filename(fname);
15409 +   run;
15412 +   /* Validvarname Case */
15413 +   %let newNameFlag = 0;
15414 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15415 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15416 +        %if &dsid %then %do;
15417 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15418 +            %let dsid = %sysfunc(close(&dsid));
15419 +       %end;
15420 +   %end;
15422 +   %if %sysevalf(&newNameFlag>0) %then %do;
15423 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15424 +       run;
15425 +       proc sort data=work._any; by VARNUM; run; quit;
15427 +       options validvarname=V7;
15429 +       %procimport(out=work.importfile2);
15431 +       options validvarname=ANY;
15433 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15434 +       run;
15435 +       proc sort data=work._v7; by varnum; run; quit;
15437 +       filename _FI "&em_user_vvnlabel";
15438 +       data work._names;
15439 +          length string $200;
15440 +          merge work._v7 work._any;
15441 +          by VARNUM;
15442 +          file _FI;
15443 +          if V7NAME ne NAME then do;
15444 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15445 +             put string;
15446 +             if LABEL eq '' then do;
15447 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15448 +                put string;
15449 +             end;
15450 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15451 +             put string;
15452 +          end;
15453 +          drop string;
15454 +       run;
15455 +       data &em_user_data;
15456 +          set &em_user_data;
15457 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15458 +              filename _FI "&em_user_vvnlabel";
15459 +              %inc _FI;
15460 +             filename _FI;
15461 +          %end;
15462 +       run;
15464 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15465 +       proc sort data=work._names;             by NAME; run;
15467 +       data &em_user_EMCMETADEFAULT;
15468 +         merge  &em_user_EMCMETADEFAULT _names;
15469 +         by NAME;
15470 +         length DROP $1;
15471 +         DROP='N';
15472 +         if NEWNAME ne NAME then do;
15473 +            if LABEL eq '' then do;
15474 +               LABEL = NAME;
15475 +            end;
15476 +            NAME=V7NAME;
15477 +         end;
15478 +         drop NEWNAME V7NAME VARNUM;
15479 +       run;
15481 +       proc datasets lib=work nolist;
15482 +          delete _any _v7 _names importfile2;
15483 +       run;
15484 +       quit;
15486 +   %end;
15487 +   %else %do;
15488 +       data &em_user_EMCMETADEFAULT;
15489 +          set &em_user_EMCMETADEFAULT;
15490 +          length DROP $1;
15491 +          DROP='N';
15492 +       run;
15493 +   %end;
15495 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15497 +   data _temp;
15498 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
15499 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
15500 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
15501 +      COLUMNMETAMODTIME=MODTIME;
15502 +   run;
15503 +   proc sort data=&em_data_importset;
15504 +      by PORT;
15505 +   run;
15506 +   data &em_data_importset;
15507 +      merge &em_data_importset _temp;
15508 +      by PORT;
15509 +      if PORT='DATA' then ROLE="&em_property_role";
15510 +   run;
15512 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15514 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15515 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
15516 +            filename x "&em_user_variablesetdelta";
15517 +            data &em_data_variableset;
15518 +               set &em_user_emcmetadefault;
15519 +               %inc X;
15520 +            run;
15521 +            filename x;
15522 +        %end;
15523 +        %else %do;
15524 +            data &em_data_variableset;
15525 +               set &em_user_emcmetadefault;
15526 +            run;
15527 +        %end;
15528 +    %end;
15530 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15531 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
15532 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
15533 +         id NAME;
15534 +      run;
15536 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
15537 +         data _null_;
15538 +            length string $200;
15539 +            set _DiffMeta end=eof;
15540 +            where _type_='COMPARE';
15541 +            file x1;
15542 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15543 +            put string;
15544 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15545 +            put string;
15546 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15547 +            put string;
15548 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15549 +            put string;
15550 +            put 'end;';
15551 +            if drop='Y' then do;
15552 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
15553 +               put string;
15554 +            end;
15555 +            if eof then
15556 +               put 'drop DROP;';
15557 +         run;
15559 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
15560 +         filename x2 "&em_user_deltacode";
15561 +         %em_copyfile(infref=x1, outfref=x2);
15562 +         filename x1;
15563 +         filename x2;
15565 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15566 +         filename x "&em_user_variablesetdelta";
15567 +         data _null_;
15568 +            length string $200;
15569 +            set _DiffMeta end=eof;
15570 +            where _type_='COMPARE';
15571 +            file x;
15572 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15573 +            put string;
15574 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15575 +            put string;
15576 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15577 +            put string;
15578 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15579 +            put string;
15580 +            string = '   DROP="'!!strip(DROP)!!'";';
15581 +            put string;
15582 +            put 'end;';
15583 +         run;
15584 +         filename x;
15585 +       proc datasets lib=work nolist;
15586 +          delete _DiffMeta;
15587 +       run;
15589 +       data &em_data_exportset;
15590 +          set &em_data_exportset;
15591 +          if NODEPORT='TRAIN' then do;
15592 +             ROLE="&em_property_role";
15593 +             COLUMNMETAMODTIME=datetime();
15594 +             MODTIME=datetime();
15595 +             DATASET="&em_nodeid._train";
15596 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
15597 +             DELTACODE="CDelta_TRAIN";
15598 +             APPLYDELTA='Y';
15599 +             EXPORT='Y';
15600 +             NEEDUPDATE='Y';
15602 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
15603 +                EMINFO="&em_data_eminfo";
15604 +                EMINFOMODTIME=datetime();
15605 +            %end;
15606 +            %else %do;
15607 +                EMINFO='';
15608 +                EMINFOMODTIME=.;
15609 +            %end;
15610 +          end;
15611 +       run;
15612 +   %end;
15614 +  proc contents data=&em_user_data;
15615 +  run;
15616 +  proc datasets library=work nolist;
15617 +   delete importfile importattrs new;
15618 +   quit;
15619 +  run;
15621 +  /* Reset VALIDVARNAME to original settings */
15622 +  options validvarname=&vvnString;
15624 +  %endtrain:
15625 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
filetype=*xlsx*
delimiter=*,*
 
NOTE: The import data set has 35 observations and 11 variables.
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 35 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS1.FIMPORT3_DATA has 35 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.IMPORTATTRS has 11 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137
NOTE: There were 11 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
nobs=11  maxcols=10000
 
NOTE: The file EMWS1.FIMPORT3_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.FIMPORT3_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
15626  %let SYSCC = 0;
15627  %let _dsidTable = 0;
15628  %let _engineTable =;
15629  data _null_;
15630  dsid = open('EMWS1.FIMPORT3_DATA');
15631  call symput('_dsidTable', strip(put(dsid, best.)));
15632  if dsid then do;
15633  call symput('_engineTable', attrc(dsid, 'ENGINE'));
15634  dsid = close(dsid);
15635  end;
15636  run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15637  options fmterr;
15638  data _metaTestView;
15639  set EMWS1.FIMPORT3_DATA;
15640  if _N_=1 then do;
15641  output;
15642  stop;
15643  end;
15644  run;
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT3_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15645  proc contents data=EMWS1.FIMPORT3_DATA
15646  out=WORK.M294QXSF noprint;
15647  run;
 
NOTE: The data set WORK.M294QXSF has 11 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15648  data WORK.M294QXSF;
15649  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
15650  label NAME =;
15651  set WORK.M294QXSF(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
15652  if itype = 1 then type = 'N';
15653  else type = 'C';
15654  if formatl > 0 then do;
15655  if format ne '' then do;
15656  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15657  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
15658  end;
15659  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15660  end;
15661  else if format ne '' then format = strip(format)!!'.';
15662  if informl > 0 then do;
15663  if informat ne ' ' then do;
15664  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15665  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
15666  end;
15667  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15668  end;
15669  else if informat ne '' then informat = strip(informat)!!'.';
15670  if idxusage = 'NONE' then index ="N";
15671  else index = "Y";
15672  indextype = idxusage;
15673  drop idxusage itype formatl formatd informl informd;
15674  run;
 
NOTE: There were 11 observations read from the data set WORK.M294QXSF.
NOTE: The data set WORK.M294QXSF has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
15675  data WORK.M294QXSF;
15676  length UNAME $64;
15677  set WORK.M294QXSF;
15678  UNAME = upcase(NAME);
15679  run;
 
NOTE: There were 11 observations read from the data set WORK.M294QXSF.
NOTE: The data set WORK.M294QXSF has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15683  data WORK.M09Z8UGY;
15684  drop UNAME;
15685  set WORK.M09Z8UGY;
15686  run;
 
NOTE: There were 11 observations read from the data set WORK.M09Z8UGY.
NOTE: The data set WORK.M09Z8UGY has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.17 seconds
      cpu time            0.09 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK._ANY has 11 observations and 3 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK._ANY.
NOTE: The data set WORK._ANY has 11 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
filetype=*xlsx*
delimiter=*,*
 
NOTE:    Variable Name Change.  Change  -> Change__
NOTE:    Variable Name Change.  DailyStockOpen/PrevDayOpen -> DailyStockOpen_PrevDayOpen
NOTE:    Variable Name Change.  DailyHighestPrice/StockOpenPrice -> DailyHighestPrice_StockOpenPrice
NOTE:    Variable Name Change.  DailyLowestPrice/StockOpenPrice -> DailyLowestPrice_StockOpenPrice
NOTE:    Variable Name Change.  DailyStockOpen/PrevClosePrice -> DailyStockOpen_PrevClosePrice
NOTE: The import data set has 35 observations and 11 variables.
NOTE: WORK.IMPORTFILE2 data set was successfully created.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK._V7 has 11 observations and 3 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK._V7.
NOTE: The data set WORK._V7 has 11 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file _FI is:
      Filename=C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\VVNLABEL.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Dec2019:13:32:18,
      Create Time=17Dec2019:15:07:15
 
NOTE: 10 records were written to the file _FI.
      The minimum record length was 17.
      The maximum record length was 70.
NOTE: There were 11 observations read from the data set WORK._V7.
NOTE: There were 11 observations read from the data set WORK._ANY.
NOTE: The data set WORK._NAMES has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _FI is file C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\VVNLABEL.sas.
15945 +Change__= "Change %"n;
15946 +drop "Change %"n;
15947 +DailyStockOpen_PrevDayOpen= "DailyStockOpen/PrevDayOpen"n;
15948 +drop "DailyStockOpen/PrevDayOpen"n;
15949 +DailyHighestPrice_StockOpenPrice= "DailyHighestPrice/StockOpenPrice"n;
15950 +drop "DailyHighestPrice/StockOpenPrice"n;
15951 +DailyLowestPrice_StockOpenPrice= "DailyLowestPrice/StockOpenPrice"n;
15952 +drop "DailyLowestPrice/StockOpenPrice"n;
15953 +DailyStockOpen_PrevClosePrice= "DailyStockOpen/PrevClosePrice"n;
15954 +drop "DailyStockOpen/PrevClosePrice"n;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _FI has been deassigned.
 
NOTE: There were 35 observations read from the data set EMWS1.FIMPORT3_DATA.
NOTE: The data set EMWS1.FIMPORT3_DATA has 35 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT3_EMCMETADEFAULT has 11 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK._NAMES.
NOTE: The data set WORK._NAMES has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: There were 11 observations read from the data set WORK._NAMES.
NOTE: The data set EMWS1.FIMPORT3_EMCMETADEFAULT has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK._ANY (memtype=DATA).
NOTE: Deleting WORK._V7 (memtype=DATA).
NOTE: Deleting WORK._NAMES (memtype=DATA).
NOTE: Deleting WORK.IMPORTFILE2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
15955  %let SYSCC = 0;
15956  data EMWS1.FIMPORT3_EMTMETADEFAULT;
15957  length LIBNAME $8;
15958  LIBNAME = "EMWS1";
15959  run;
 
NOTE: The data set EMWS1.FIMPORT3_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT3_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT3_IMPORTSET.
NOTE: The data set EMWS1.FIMPORT3_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT3_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.FIMPORT3_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\VARIABLESETDELTA.txt.
15988 +if NAME="Outcome" then do;
15989 +ROLE="TARGET";
15990 +LEVEL="BINARY";
15991 +ORDER="";
15992 +DROP="N";
15993 +end;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT3_VARIABLESET has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_VARIABLESET.
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 2 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X1 is:
      Filename=C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Dec2019:13:32:18,
      Create Time=17Dec2019:15:07:05
 
NOTE: 6 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 26.
NOTE: There were 1 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file X2 is:
      Filename=C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=19Dec2019:13:32:18,
      Create Time=17Dec2019:15:07:05
 
NOTE: 6 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 26.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Dec2019:13:32:18,
      Create Time=17Dec2019:15:07:05
 
NOTE: 6 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 26.
NOTE: There were 1 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: Deleting WORK._DIFFMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
NOTE: The PROCEDURE CONTENTS printed page 2.
 
 
NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
15994  *------------------------------------------------------------*;
15995  * End TRAIN: FIMPORT3;
15996  *------------------------------------------------------------*;
 
15997  *------------------------------------------------------------*;
15998  * Close any missing semi colons;
15999  *------------------------------------------------------------*;
16000  ;
16001  ;
16002  ;
16003  ;
16004  quit;
16005  *------------------------------------------------------------*;
16006  * Close any unbalanced quotes;
16007  *------------------------------------------------------------*;
16008  /*; *"; *'; */
16009  ;
16010  run;
16011  quit;
16012  /* Reset EM Options */
16013  options formchar="|----|+|---+=|-/\<>*";
16014  options nocenter ls=256 ps=10000;
16015  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                December 19, 2019
Time:                13:32:18
*------------------------------------------------------------*
16117  %let EMEXCEPTIONSTRING=;
16118  *------------------------------------------------------------*;
16119  * SCORE: FIMPORT3;
16120  *------------------------------------------------------------*;
16121  %let EM_ACTION = SCORE;
16122  %let syscc = 0;
16123  /* Fimport.source */
16124  %macro main;
16125        %if %upcase(&EM_ACTION) = CREATE %then %do;
16126           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16127           %include temp;
16128           filename temp;
16129           %create;
16130        %end;
16131        %else
16132        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16133           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16134           %include temp;
16135           filename temp;
16136           %train;
16137        %end;
16138        %else
16139        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16140           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16141           %include temp;
16142           filename temp;
16143           %update;
16144        %end;
16145        %else
16146        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16147           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16148           %include temp;
16149           filename temp;
16150           %property;
16151        %end;
16152         %else
16153        %if %upcase(&EM_ACTION) = SCORE %then %do;
16154           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16155           %include temp;
16156           filename temp;
16157           %score;
16158        %end;
16159        %else
16160        %if %upcase(&EM_ACTION) = REPORT %then %do;
16161           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16162           %include temp;
16163           filename temp;
16164           %report;
16165        %end;
16166        %else
16167        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16168           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16169           %include temp;
16170           filename temp;
16171           %openvariableset;
16172        %end;
16173        %else
16174        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16175           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16176           %include temp;
16177           filename temp;
16178           %closevariableset;
16179        %end;
16180  %mend main;
16181  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_SCORE.SOURCE.
16182 +%macro score;
16183 +
16184 +   filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16185 +   data _null_;
16186 +      file x;
16187 +      put ' ';
16188 +   run;
16189 +   filename x;
16190 +
16191 +   %em_getname(key=DATA, type=DATA);
16192 +   %if %sysfunc(exist(&em_user_data)) %then %do;
16193 +       data &em_export_train / view=&em_export_train;
16194 +          set &em_user_data;
16195 +       run;
16196 +   %end;
16197 +
16198 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file X is:
      Filename=C:\Users\Forge 15 i7\Documents\DataMining\DM\Workspaces\EMWS1\FIMPORT3\_updatePath.st,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=19Dec2019:13:32:18,
      Create Time=19Dec2019:13:32:18
 
NOTE: 1 record was written to the file X.
      The minimum record length was 1.
      The maximum record length was 1.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: DATA STEP view saved on file EMWS1.FIMPORT3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16199  *------------------------------------------------------------*;
16200  * End SCORE: FIMPORT3;
16201  *------------------------------------------------------------*;
 
16203  *------------------------------------------------------------*;
16204  * FIMPORT3: Computing metadata for TRAIN data;
16205  *------------------------------------------------------------*;
 
NOTE: View EMWS1.FIMPORT3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS1.FIMPORT3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                December 19, 2019
Time:                13:32:19
*------------------------------------------------------------*
16572  %let EMEXCEPTIONSTRING=;
16573  *------------------------------------------------------------*;
16574  * REPORT: FIMPORT3;
16575  *------------------------------------------------------------*;
16576  %let EM_ACTION = REPORT;
16577  %let syscc = 0;
16578  /* Fimport.source */
16579  %macro main;
16580        %if %upcase(&EM_ACTION) = CREATE %then %do;
16581           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16582           %include temp;
16583           filename temp;
16584           %create;
16585        %end;
16586        %else
16587        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16588           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16589           %include temp;
16590           filename temp;
16591           %train;
16592        %end;
16593        %else
16594        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16595           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16596           %include temp;
16597           filename temp;
16598           %update;
16599        %end;
16600        %else
16601        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16602           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16603           %include temp;
16604           filename temp;
16605           %property;
16606        %end;
16607         %else
16608        %if %upcase(&EM_ACTION) = SCORE %then %do;
16609           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16610           %include temp;
16611           filename temp;
16612           %score;
16613        %end;
16614        %else
16615        %if %upcase(&EM_ACTION) = REPORT %then %do;
16616           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16617           %include temp;
16618           filename temp;
16619           %report;
16620        %end;
16621        %else
16622        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16623           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16624           %include temp;
16625           filename temp;
16626           %openvariableset;
16627        %end;
16628        %else
16629        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16630           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16631           %include temp;
16632           filename temp;
16633           %closevariableset;
16634        %end;
16635  %mend main;
16636  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_REPORT.SOURCE.
16637 +%macro report;
16638 +    %em_getname(key=EMSTAT,     type=DATA);
16639 +    %em_getname(key=EMINFO,     type=DATA);
16640 +    %em_getname(key=CLASS,      type=DATA);
16641 +    %em_getname(key=INTERVAL,   type=DATA);
16642 +
16643 +    %em_REPORT(key=EMSTAT,   viewtype=DATA, description=EMSTAT, block=Report, autodisplay=Y);
16644 +    %em_REPORT(key=INTERVAL, viewtype=LATTICE, LATTICETYPE=HISTOGRAM, LATTICEX=VARIABLE, DISCRETEX=Y, X=VALUE,FREQ=PERCENT,block=Report, description=INTERVALTARGET, autodisplay=N);
16645 +    %em_REPORT(key=CLASS, viewtype=LATTICE, LATTICEtype=BAR, LATTICEX=VARIABLE, X=VALUE,FREQ=PERCENT, block=Report, description=CLASSTARGET, autodisplay=Y);
16646 +
16647 +    %if &em_property_summarize eq Y %then %do;
16648 +        filename temp catalog 'sashelp.emmeta.emadvisestatistics.source';
16649 +        %include temp;
16650 +        filename temp;
16651 +
16652 +        data work.tempmeta;
16653 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16654 +           if ROLE='TARGET' and LEVEL ne 'INTERVAL' then output;
16655 +         run;
16656 +
16657 +        %class_profile(DATA=&em_export_train, OUTPUT=&em_user_class, VARS=,
16658 +                      METADATA=tempmeta, STAT=_STAT, FREQ=);
16659 +
16660 +         data work.tempmeta;
16661 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16662 +            if ROLE='TARGET' and LEVEL eq 'INTERVAL' then output;
16663 +         run;
16664 +         %var_profile(DATA=&em_export_train, OUTPUT=&em_user_INTERVAL, VARS=, METADATA=tempmeta, COMPUTESTAT=Y, STAT=_STAT, FREQ=,
16665 +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
16666 +
16667 +        data work.tempmeta;
16668 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16669 +        run;
16670 +
16671 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16672 +            %EmAdviseStat(&em_export_train, maxClassLevels=32, metadata=tempmeta, statisticData=&em_user_emstat);
16673 +
16674 +            data &em_data_exportset;
16675 +                 set &em_data_exportset;
16676 +                 if NODEPORT='TRAIN' then do;
16677 +                    EMINFO="&em_data_eminfo";
16678 +                    EMINFOMODTIME=datetime();
16679 +                 end;
16680 +            run;
16681 +        %end;
16682 +        %else %do;
16683 +            %em_getname(key=EMSTATDEFAULT,     type=DATA);
16684 +            %if %sysfunc(exist(&em_user_emstatdefault)) %then %do;
16685 +                data &em_user_emstat /  view=&em_user_emstat;
16686 +                   set &em_user_emstatdefault;
16687 +                run;
16688 +            %end;
16689 +        %end;
16690 +    %end;
16691 +    %else %do;
16692 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16693 +            proc datasets lib=&em_lib nolist;
16694 +               delete &em_nodeid._EMINFO;
16695 +            run;
16696 +            quit;
16697 +            data &em_data_exportset;
16698 +                 set &em_data_exportset;
16699 +                 if NODEPORT='TRAIN' then do;
16700 +                    EMINFO="";
16701 +                    EMINFOMODTIME=.;
16702 +                 end;
16703 +            run;
16704 +        %end;
16705 +    %end;
16706 +
16707 +    data &em_data_exportset;
16708 +       set &em_data_exportset;
16709 +       if NODEPORT='TRAIN' then do;
16710 +          ROLE="&em_property_role";
16711 +       end;
16712 +    run;
16713 +
16714 +    %if %sysfunc(exist(&em_data_variableSet)) %then %do;
16715 +        proc freq data=&em_data_variableset noprint;
16716 +             table ROLE*LEVEL/out=work.tempMeta;
16717 +        run;
16718 +        proc print data=work.tempmeta label noobs;
16719 +           var ROLE LEVEL COUNT;
16720 +           label ROLE  = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
16721 +                 LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))"
16722 +                 COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
16723 +        title9  ' ';
16724 +        title10  "%sysfunc(sasmsg(sashelp.dmine, rpt_exptattributes_title, NOQUOTE, TRAIN))";
16725 +        run;
16726 +        title10;
16727 +    %end;
16728 +
16729 +    %if %sysfunc(exist(work.tempmeta)) %then %do;
16730 +        proc datasets lib=work nolist;
16731 +           delete tempmeta;
16732 +        run;
16733 +        quit;
16734 +    %end;
16735 +
16736 +%mend report;
16737 +
16738 +
16739 +
16740 +
16741 +
16742 +
16743 +
16744 +
16745 +
16746 +
16747 +
16748 +
16749 +
16750 +
16751 +
16752 +
16753 +
16754 +
16755 +
16756 +
16757 +
16758 +
16759 +
16760 +
16761 +
16762 +
16763 +
16764 +
16765 +
16766 +
16767 +
16768 +
16769 +
16770 +
16771 +
16772 +
16773 +
16774 +
16775 +
16776 +
16777 +
16778 +
16779 +
16780 +
16781 +
16782 +
16783 +
16784 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file EMWS1.FIMPORT3_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT3_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT3_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS1.FIMPORT3_VARIABLESET.
NOTE: The data set WORK.TEMPMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.TEMPMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
16785  *------------------------------------------------------------*;
16786  * End REPORT: FIMPORT3;
16787  *------------------------------------------------------------*;
 
16788  /* Reset EM Options */
16789  options formchar="|----|+|---+=|-/\<>*";
16790  options nocenter ls=256 ps=10000;
16791  goptions reset=all device=GIF NODISPLAY;
 
16792  proc sort data=WORK.EM_USER_REPORT;
16793  by ID VIEW;
16794  run;
 
NOTE: There were 396 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
